type User {
  id: ID! @id
  avatar: String
  username: String! @unique
  email: String! @unique
  bio: String
  followings: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]! @relation(name: "PostsOfUer", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfUer", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUer", onDelete: CASCADE)
  rooms: [Room!]!
  loginSecret: String
}

type Post {
  id: ID! @id
  location: String
  caption: String!
  user: User @relation(name: "PostsOfUer")
  files: [File!]! @relation(name: "FilesOfPost" onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfPost" onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfPost" onDelete: CASCADE)
}

type Like {
  id: ID! @id
  user: User @relation(name: "LikesOfUer")
  post: Post @relation(name: "LikesOfPost")
}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name: "CommentsOfUer")
  post: Post @relation(name: "CommentsOfPost")
}

type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
}

type Room {
  id: ID! @id
  participants: [User!]!
  messages: [Message!]! @relation(name: "MessagesOfRoom" onDelete: CASCADE)
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room @relation(name: "MessagesOfRoom")
}